/**
 * A simple selfcontained webapp that demonstrates a number of GWT plugin features
 */
defaultTasks 'assemble'

buildscript {
    repositories { flatDir(dirs: "${rootProject.projectDir}/../../build/libs") }
    dependencies { classpath 'org.gradle.api.plugins:gradle-gwt-plugin:0.1-SNAPSHOT' }
}

apply plugin: 'jetty'
apply plugin: 'gwt'

group = 'net.desource.samples'
version = '0.3-SNAPSHOT'

repositories {
    mavenCentral()
    repositories { flatDir(dirs: "${rootProject.projectDir}/../../repo") }
}


dependencies {
    gwt 'aopalliance:aopalliance:1.0@jar'
    gwt 'javax.inject:javax.inject:1@jar'
    gwt 'com.google.gwt.inject:gin:1.5.0@jar'
    gwt 'com.google.inject:guice:3.0@jar'
    gwt 'javax.validation:validation-api:1.0.0.GA'
    gwt 'javax.validation:validation-api:1.0.0.GA:sources'
    gwt 'com.google.inject.extensions:guice-assistedinject:3.0@jar'

    testCompile 'junit:junit:4.7@jar', 'org.mockito:mockito-all:1.8.1@jar'
}

[jettyRun, jettyRunWar]*.contextPath = '/'

test {
    ignoreFailures = true // TODO check if this is still needed (think to enable hudson integration...)
    jvmArgs '-Xmx256m', '-XX:+HeapDumpOnOutOfMemoryError'
}

gwt {
    gwtModules = ['net.desource.samples.fortune.App']
    gwtVersion = '2.3.0'
}
compileGwt {
    style = 'DETAILED' // Script output style: OBF[USCATED], PRETTY, or DETAILED (defaults to OBF)
    compileReport = true
}

gwtDevMode {
    startupUrls = ['/']
}